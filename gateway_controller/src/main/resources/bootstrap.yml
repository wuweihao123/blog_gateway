server:
  port: 8006

spring:
  cloud:
    gateway:
      routes:
        - id: user-route # 路由的唯一标识，路由到user服务
          uri: lb://user-service # 从nacos读取配置信息
          # 断言规则 用于路由规则的匹配
          predicates:
            - Path=/user/**
          filters:
            - StripPrefix=1
        - id: time_between_route
          uri: lb://user-service
          predicates:
            # 当且仅当请求的时间在between配置的时间范围内，才会匹配到路由进行转发
            - TimeBetween=上午9:00, 下午6:00
        - id: add_request_parameter_route
          uri: lb://user-service
          predicates:
            - Path=/**
          filters:
            # 请求数限流 名称不能随便写，默认使用factory，默认使用令牌桶算法
            - name: RequestRateLimiter
              args:
                # 针对请求IP进行限流
                key-resolver: "#{@ipKeyResolver}"
                # 在不丢弃请求的情况下，允许用户每秒执行的请求数，即令牌桶填充速率： 1/s（1秒1个）
                redis-rate-limiter.replenishRate: 1
                # 表示允许用户在一秒内执行的最大请求数，即：令牌桶可以容纳的令牌数；将此值设置为0会阻止所有请求
                redis-rate-limiter.burstCapacity: 1
                # 表示一个请求需要多少个令牌,默认为1
                redis-rate-limiter.requestTokens: 1
        - id: circuit_breaker_route
          uri: lb://user-service
          predicates:
            - Path=/**
          filters:
            - name: CircuitBreaker
              args:
                name: myCircuitBreaker
                # 指定断路器的重定向地址（gateway内部controller)
                fallbackUri: forward:/defaultFallback
                # 当且仅当出现如下状态码时，断路器才会生效
                statusCodes:
                  - 500
                  - "NOT_FOUND"
            - name: FallbackHeaders
              args:
                executionExceptionTypeHeaderName: Saint-Test-Header
        - id: circuit_breaker_retry_route
          uri: lb://user-service
          predicates:
            - Path=/**
          filters:
            # 重试
            - name: Retry
              args:
                # 请求重试次数，默认值3
                retries: 3
                # 可以进行重试的状态码
                statuses: INTERNAL_SERVER_ERROR, NOT_FOUND
                # 可以进行重试的Http method
                methods: GET,POST
                # 重试的时间间隔配置
                backoff:
                  # 第一次重试间隔
                  firstBackoff: 100ms
                  # 最大重试时间间隔
                  maxBackoff: 500ms
                  # 时间间隔因子
                  factor: 2
                  # 关闭根据上次重试时间间隔计算当前重试时间间隔功能
                  basedOnPreviousValue: false
      # 解决跨域问题
      globalcors:
        cors-configurations:
          # 匹配所有请求
          '[/**]':
            # 设备允许域名
            allowedOrigins:
              - "http://localhost:8006"
            # 允许所有头信息
            allowedHeaders: '*'
            # 设置允许携带Cookie
            # 为true时allowedOrigins不允许为* 否则会报错
            allowCredentials: false
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE

  # 集成zipkin
  zipkin:
    base-url: http://127.0.0.1:9411/
    # zipkin不注册到nacos
    discovery-client-enabled: false
  sleuth:
    sampler:
      # 抽样率。默认0.1(10%),即丢弃90%的数据
      probability: 1.0

  redis:
    port: 6379
    host: 127.0.0.1

auth:
  skip:
    urls:

#暴露监控  使用http://xxxx./actuator/metrics 查看请求信息
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always


